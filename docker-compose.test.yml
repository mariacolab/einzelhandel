version: '3.8'

services:
  postgres-test:
    image: postgres:latest
    container_name: postgres_test
    environment:
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: microservices_db_test
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
    ports:
      - "5433:5432"
    volumes:
      - db_data_test:/var/lib/postgresql/data
      - ./backend/database-management/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./secrets:/app/secrets
    secrets:
      - github_credentials

  database-management-test:
    build:
      context: ./backend/database-management
      target: test
    container_name: database-management-test
    environment:
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres-test:5432/microservices_db_test
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /app
    depends_on:
      - postgres-test
    ports:
      - "5021:5000"
    secrets:
      - github_credentials
    volumes:
      - ./backend/database-management:/app
      - ./secrets:/app/common/secrets
      - ./common:/app/common
    command: pytest /app/tests/

  user-management-test:
    build:
      context: ./backend/user_management
      target: test
    container_name: user-management-test
    environment:
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres-test:5432/microservices_db_test
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /app
    depends_on:
      - database-management-test
    ports:
      - "5022:5000"
    secrets:
      - github_credentials
    volumes:
      - ./backend/user_management:/app
      - ./secrets:/app/common/secrets
      - ./common:/app/common
    command: pytest /app/tests/

  qr-service-test:
    build:
      target: test
      context: ./backend/qr-code-generator
    container_name: qr-service-test
    environment:
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /app
    ports:
      - "5024:5000"
    depends_on:
      - redis-test
    secrets:
      - github_credentials
    volumes:
      - ./backend/qr-code-generator:/app
      - ./secrets:/app/common/secrets
      - ./common:/app/common
    command: pytest /app/tests/

  eventing-service-test:
    build:
      target: test
      context: ./backend/eventing
      dockerfile: Dockerfile
    container_name: eventing-service-test
    environment:
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: backend/eventing/producer.py
      PYTHONPATH: /app
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
    ports:
      - "5025:5000"
    depends_on:
      - database-management-test
    secrets:
      - github_credentials
    volumes:
      - ./secrets:/app/common/secrets
      - ./common:/app/common
    command: pytest /app/tests/

  webhook-service-test:
    build:
      context: ./backend/webhook
    container_name: webhook-service-test
    environment:
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /app
    depends_on:
      - redis-test
    ports:
      - "5028:5008"
    secrets:
      - github_credentials
    volumes:
      - ./secrets:/app/common/secrets
      - ./common:/app/common
    command: ["python3", "webhook.py"]

  redis-test:
    image: redis:latest
    container_name: redis_test
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6380:6379"
    volumes:
      - redis_data_test:/data

volumes:
  db_data_test:
  redis_data_test:

secrets:
  github_credentials:
    file: secrets/github_credentials.txt
