services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    build:
      context: .
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: microservices_db
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/database-management/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./update_pg_hba.sh:/docker-entrypoint-initdb.d/update_pg_hba.sh
    secrets:
      - github_credentials

  database-management:
    build:
      context: ./backend/database-management
      target: production
    container_name: database-management-service
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/microservices_db
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /app
    depends_on:
      - postgres
    ports:
      - "5001:5000"
    secrets:
      - github_credentials
    volumes:
      - ./backend/database-management:/app
      - ./secrets:/app/common/secrets
      - ./common:/app/common

  admin-service:
    build:
      context: ./backend/administrative-service
      target: production
    container_name: admin-service
    privileged: true
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /app
      RABBITMQ_URL: amqp://guest:${RABBITMQ_PASSWORD}@rabbitmq:5672
      GOOGLE_DRIVE_PATH: /mnt/gdrive
    depends_on:
      - rabbitmq
      - rclone
    ports:
      - "5002:5000"
    secrets:
      - github_credentials
    volumes:
      - ./secrets:/app/common/secrets
      - ./common:/app/common
      - ./secrets/davfs_secrets:/etc/davfs2/secrets:rw
      - ./secrets/rclone.conf:/config/rclone.conf:ro
    #command: ["python3", "subscriber.py"]

  user-management:
    build:
      context: ./backend/user_management
    container_name: user_service
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /app
    ports:
      - "5003:5000"
    depends_on:
      - database-management
    secrets:
      - github_credentials
    volumes:
      - ./backend/user_management:/app
      - ./secrets:/app/common/secrets
      - ./common:/app/common

  qr-service:
    build:
      target: production
      context: ./backend/qr-code-generator
    container_name: qr_service
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /app
      RABBITMQ_URL: amqp://guest:${RABBITMQ_PASSWORD}@rabbitmq:5672
      GOOGLE_DRIVE_PATH: /app/gdrive
    ports:
      - "5004:5000"
    depends_on:
      - rabbitmq
      - rclone
    secrets:
      - github_credentials
    volumes:
      - ./backend/qr-code-generator:/app
      - ./secrets:/app/common/secrets
      - ./common:/app/common
      #- ./class.json:/class.json
    command: ["python3", "subscriber.py"]

  eventing-service:
    build:
      target: production
      context: ./backend/eventing
      dockerfile: Dockerfile
    container_name: eventing_service
    privileged: true
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: backend/eventing/producer.py
      PYTHONPATH: /app
      RABBITMQ_URL: amqp://guest:${RABBITMQ_PASSWORD}@rabbitmq:5672
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      GOOGLE_DRIVE_PATH: /mnt/gdrive
    ports:
      - "5005:5000"
    depends_on:
      - database-management
      - rabbitmq
      - user-management
      - rclone
    secrets:
      - github_credentials
    volumes:
      - ./secrets:/app/common/secrets
      - ./common:/app/common
      - ./secrets/davfs_secrets:/etc/davfs2/secrets:rw
      - ./secrets/rclone.conf:/config/rclone.conf:ro

  ki:
    build:
      context: ./ki
      target: production
      dockerfile: Dockerfile
      args:
        - DOCKER_BUILDKIT=1
    container_name: ki
    privileged: true
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /workspace
      RABBITMQ_URL: amqp://guest:${RABBITMQ_PASSWORD}@rabbitmq:5672
      NVIDIA_VISIBLE_DEVICES: all
      COMPOSE_HTTP_TIMEOUT: 1500
      GOOGLE_DRIVE_PATH: /mnt/gdrive
    depends_on:
      - rabbitmq
      - rclone
    ports:
      - "5006:5000"
    secrets:
      - github_credentials
    volumes:
      - ./secrets:/workspace/common/secrets
      - ./common:/workspace/common
      - ./secrets/davfs_secrets:/etc/davfs2/secrets:rw
      - ./secrets/rclone.conf:/config/rclone.conf:ro
    #command: ["python3", "subscriber.py"]
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]

  webhook-service:
    build:
      context: ./backend/webhook
    container_name: webhook_service
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /app
      RABBITMQ_URL: amqp://guest:${RABBITMQ_PASSWORD}@rabbitmq:5672
    depends_on:
      - rabbitmq
    ports:
      - "5008:5008"
    secrets:
      - github_credentials
    volumes:
      - ./secrets:/app/common/secrets
      - ./common:/app/common
    command: [ "python3", "webhook.py" ]

  rclone:
    image: rclone/rclone
    container_name: rclone_webdav
    restart: unless-stopped
    privileged: true
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    command: [
      "serve", "webdav", "gdrive:",
      "--addr", ":8081",
      "--config", "/config/rclone.conf",
      "--vfs-cache-mode", "full",
      "--vfs-cache-max-size", "100G",
      "--vfs-write-back", "10s",
      "--dir-cache-time", "10s",
      "--vfs-cache-poll-interval", "2s",
      "--uid", "1000",
      "--gid", "1000",
      "--file-perms", "0777",
      "--dir-perms", "0777",
      "--transfers", "8",
      "--checkers", "8",
      "--low-level-retries", "20",
      "--tpslimit", "10",
      "--tpslimit-burst", "10",
      "--log-level", "ERROR"
    ]
    environment:
      - RCLONE_CONFIG=/config/rclone.conf
    volumes:
      - ./secrets/rclone.conf:/config/rclone.conf:ro
      - ./secrets/fapra-ki-einzelhandel-555f5e4a0722.json:/config/fapra-ki-einzelhandel-555f5e4a0722.json:ro
    ports:
      - "8081:8081"


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "4200:4200"
    depends_on:
      - webhook-service
    command: ["npx", "http-server", "dist/frontend_einzelhandel/browser", "-p", "4200"]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFINITIONS_FILE: /etc/rabbitmq/definitions.json
    secrets:
      - github_credentials
    volumes:
      - ./secrets:/app/common/secrets
      - ./rabbitmq_definitions.json:/etc/rabbitmq/definitions.json

  webhook-subscriber:
    build:
      context: ./backend/webhook-subscriber
    container_name: webhook-subscriber
    privileged: true
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FLASK_APP: app
      GITHUB_CREDENTIALS_FILE: /run/secrets/github_credentials
      PYTHONPATH: /app
      RABBITMQ_URL: amqp://guest:${RABBITMQ_PASSWORD}@rabbitmq:5672
      GOOGLE_DRIVE_PATH: /mnt/gdrive
    ports:
      - "5009:5000"
    depends_on:
      - rabbitmq
      - rclone
    secrets:
      - github_credentials
    volumes:
      - ./secrets:/app/common/secrets
      - ./common:/app/common
      - ./secrets/davfs_secrets:/etc/davfs2/secrets:rw
      - ./secrets/rclone.conf:/config/rclone.conf:ro
    #command: ["python3", "subscriber.py"]

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - database-management
      - admin-service
      - qr-service
      - user-management
      - ki
      - frontend
      - eventing-service

  redis:
    image: redis:latest
    container_name: redis_container
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data


volumes:
  nginx_conf:
  db_data:
  redis_data:


secrets:
  github_credentials:
    file: secrets/github_credentials.txt
